name: Build and Analyze

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permite ejecutar manualmente

jobs:
  build:
    name: Build and analyze
    runs-on: [self-hosted, Windows, X64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para SonarQube

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build project
        run: mvn -B verify # Compila y ejecuta pruebas

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar -e -X -Dsonar.projectKey=crop-manager -Dsonar.projectName='crop-manager' -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.token=$SONAR_TOKEN
